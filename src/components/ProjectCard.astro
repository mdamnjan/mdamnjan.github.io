---
import Icon from "astro-icon";
interface Props {
  title: string;
  description: string;
  techStack: string[];
  summaryPoints?: string[];
  liveLink?: string;
  githubLink?: string;
  images?: string[];
  embedded?: Element;
}

const {
  title,
  description,
  techStack,
  summaryPoints = [],
  liveLink,
  githubLink,
  images = [],
  embedded = undefined,
} = Astro.props;
---

<li class="link-card">
  <h2>
    {title}
  </h2>
  <p>
    {description}
  </p>
  <ul class="ml-[20px] list-disc">
    {summaryPoints.map((point) => <li>{point}</li>)}
  </ul>
  <ul class="mt-[20px]">
    {
      techStack.map((stack) => {
        return <li class="rounded-full inline-block bg-slate-600 p-[5px] text-sm mr-[5px]">{stack}</li>;
      })
    }
  </ul>
  <div>
    <a
      class="float-right ml-3"
      arial-label="github link"
      href={githubLink}
      target="_blank"
      rel="noreferrer"
    >
      <Icon height="24px" width="24px" pack="mdi" name="github" />
    </a>
    <a
      class="float-right"
      arial-label="live link"
      href={liveLink}
      target="_blank"
      rel="noreferrer"
    >
      <Icon height="24px" width="24px" pack="bi" name="box-arrow-up-right" />
    </a>
  </div>
</li>

<style>
  .link-card {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 30px;
    background-color: #23262d;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  .link-card:hover {
    background-color: rgb(127, 255, 212);
  }
  .link-card > a {
    text-decoration: none;
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    width: 100%;
    margin: 0;
    font-size: 1.5rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    font-weight: 500;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
