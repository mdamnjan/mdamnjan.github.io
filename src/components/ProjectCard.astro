---
import TechList from "./TechList.astro";
import IconLink from "./IconLink.astro";
interface Props {
  title: string;
  description: string;
  techStack: string[];
  summaryPoints?: string[];
  liveLink?: string;
  githubLink?: string;
}

const {
  title,
  description,
  techStack,
  summaryPoints = [],
  liveLink,
  githubLink,
} = Astro.props;
---

<li class="link-card">
  <h2>
    {title}
  </h2>
  <p class="whitespace-pre-wrap">
    {description}
  </p>
  <ul class="ml-[20px] list-disc">
    {summaryPoints.map((point) => <li>{point}</li>)}
  </ul>
  <slot name="embedded" />
  <TechList listClasses="mt-[20px]" techStack={techStack} />
  <div class="self-end mt-[10px]">
    {
      githubLink && (
        <IconLink
          classes="inline-block"
          ariaLabel="github repo link"
          link={githubLink}
          icon={{ pack: "mdi", name: "github", classes: "mb-[-1px]" }}
        />
      )
    }
    {
      liveLink && (
        <IconLink
          classes="inline-block ml-[4px]"
          ariaLabel="live link"
          link={liveLink}
          icon={{ pack: "bi", name: "box-arrow-up-right" }}
        />
      )
    }
  </div>
</li>

<style>
  .link-card {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 30px;
    background-color: #23262d;
    border-radius: 7px;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  .link-card:hover {
    background-color: rgb(127, 255, 212);
  }
  .link-card > a {
    text-decoration: none;
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    width: 100%;
    margin: 0;
    font-size: 1.5rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    font-weight: 500;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-color: rgb(0 95 93 / 75%);
    outline: 2px solid aquamarine;
  }
</style>
